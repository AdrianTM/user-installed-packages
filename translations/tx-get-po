#!/bin/bash

#  fehlix test project
#: ${ORGANIZATION:=fehlix}
#: ${PROJECT:=testproject-do-not-use}
#: ${MINIMUM_PERC:=0}


# set transifex organization and project name - if not set in environment already
: ${ORGANIZATION:=anticapitalista}
: ${PROJECT:=antix-development}
# set transifex resource name here if it is not the package name
RESOURCE=

echodo() { echo "${@}";  ${@}; }

# need 'latest' transifex client
: ${TXBIN:=$(which tx)}
[ ! -x "$TXBIN" ] && echo "Error: transifex client not found!" && exit 1

# get package name from changelog
CHNGLOG=$(find {,../,../../}debian/changelog  -type f -name changelog -print -quit 2>/dev/null)
PKGNAME=$(dpkg-parsechangelog -l "$CHNGLOG" -SSource)
# set transifex resource to package name if not defined yet
: ${RESOURCE:=$PKGNAME}

# prepare transifex 
[ -d .tx         ] || mkdir -p .tx
[ -f  .tx/config ] && rm  .tx/config

# set minium translations completion in percent to pull translation
: ${MINIMUM_PERC:=5}

cat <<EOF > .tx/config
[main]
host = https://www.transifex.com

[o:${ORGANIZATION}:p:${PROJECT}:r:${RESOURCE}]

file_filter = po/<lang>.po
minimum_perc = ${MINIMUM_PERC:=5}
resource_name = ${RESOURCE}
source_file = $PKGNAME.pot
source_lang = en
type = PO
EOF

# remove existing - if any yet
[ -d po ] && echodo rm po/*.po 2>/dev/null
[ -d po ] || echodo mkdir po

# set transifex resource_id
RESOUCE_ID="${PROJECT}.${RESOURCE}"

#echodo ${TXBIN} pull --force  --source --all "$RESOUCE_ID"
echodo ${TXBIN} pull --source --translations --all "$RESOUCE_ID"

# make LINGUAS
LINGUAS=po/LINGUAS
[ -f $LINGUAS ] && echodo rm $LINGUAS
touch $LINGUAS

cat<<LINGUAS | tee $LINGUAS
# LINGUAS with minimum completion percent ${MINIMUM_PERC}% generated at $(LANG=C.UTF-8 TZ=EST date -R)
#
LINGUAS

for po in po/*.po; do
    [ -e "$po" ] || continue
    lang=${po##*/}
    lang=${lang%.po}
    printf '%s ' "${lang}"
    echo "${lang}" >> $LINGUAS
done
echo

# prepare meson build
if [ ! -f po/meson.build ]; then
    cat <<EOF > po/meson.build
i18n.gettext(gettext_package, preset: 'glib' )
EOF
fi
